buildscript {
    ext {
        spek_version = '2.0.7'
        mockk_version = '1.9.3'
        kotlinVersion = '2.0.21'
        daggerVersion = '2.51'
        gsonVersion = '2.8.7'
    }
}
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'de.mannodermaus.android-junit5'
}
ext {
    supportLibraryVersion = '27.1.1'
    targetSdkVersion = 35
    minSdkVersion = 21
}

android {
    namespace = "com.ndmsystems.coala"
    compileSdk = 35
    defaultConfig {
        multiDexEnabled true
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    testOptions {
        junitPlatform {
            unitTests.all {
                testLogging.events = ["passed", "skipped", "failed"]
                jvmArgs '-Djava.net.preferIPv4Stack=true'
            }

            filters {
                engines {
                    include 'spek2','junit-vintage'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
            }
        }

    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    buildFeatures {
        buildConfig true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.google.dagger:dagger:$daggerVersion"
    ksp "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'net.jodah:expiringmap:0.5.8'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2")

    implementation 'org.apache.commons:commons-collections4:4.0'

    //unit tests
    testImplementation 'org.mockito:mockito-core:2.8.9'
    testImplementation "org.junit.vintage:junit-vintage-engine:5.5.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.1"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.5.1"

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    testImplementation "io.mockk:mockk:$mockk_version"

}